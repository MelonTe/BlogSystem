definitions:
  request.BlogCriteria:
    properties:
      blogname:
        description: 需要的博客名关键字
        type: string
      end:
        type: integer
      start:
        type: integer
      tag:
        description: 需要的博客对应标签
        items:
          type: string
        type: array
    type: object
  request.BlogUpdate:
    properties:
      blogname:
        type: string
      content:
        type: string
      tag:
        items:
          type: string
        type: array
    type: object
  request.BlogWithName:
    properties:
      blogname:
        type: string
    type: object
  request.LoginData:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  request.Message:
    properties:
      message:
        type: string
    required:
    - message
    type: object
  request.MessageWithTime:
    properties:
      createdtime:
        type: string
      message:
        type: string
    required:
    - createdtime
    - message
    type: object
  response.BlogWithTag:
    properties:
      content:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      tag:
        description: Blog对应的标签
        items:
          type: string
        type: array
      title:
        type: string
      updatedAt:
        type: string
    type: object
  response.MessageWithTime:
    properties:
      createdtime:
        type: string
      message:
        type: string
    type: object
  response.Response:
    properties:
      code:
        description: 响应码
        type: integer
      data:
        description: 响应数据
      message:
        description: 信息提示
        type: string
      success:
        description: 成功提示
        type: boolean
    type: object
  response.Tag:
    properties:
      count:
        type: integer
      tagname:
        type: string
    type: object
  response.TokenData:
    properties:
      token:
        description: token字段
        type: string
    type: object
host: 127.0.0.1:8080
info:
  contact: {}
  description: |-
    后台用于接受一系列的前端请求，调用数据库数据进行响应。对于含有/api的路由，需要进行JWT认证，需要在请求头中携带token。
    测试用token：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ik1lbG9uVGUiLCJleHAiOjE3MzI0NzM0MjZ9.557Xsa2INUh9ul0XXYu6LDqr4xXEb0-KiPg3uPnyr1M
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: 博客系统
  version: "1.0"
paths:
  /api/blog:
    delete:
      consumes:
      - application/json
      description: 根据博文昵称删除对应的博文,URL请求例如/api/blog?blogname=example-blog
      parameters:
      - description: Blog昵称
        in: query
        name: blogname
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: 错误提示
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: 该接口用于接受博文昵称进行删除
      tags:
      - Blog
    put:
      consumes:
      - application/json
      description: 根据请求中的博文内容进行后台博文更新
      parameters:
      - description: 更改blog结构体
        in: body
        name: blogupdate
        required: true
        schema:
          $ref: '#/definitions/request.BlogUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: 错误提示
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: 该接口用于进行博文修改
      tags:
      - Blog
  /api/message:
    delete:
      consumes:
      - application/json
      description: 该接口用于删除留言，需要携带留言具体的创建时间，避免删除所有内容一样的留言
      parameters:
      - description: 留言详情
        in: body
        name: messagewithtime
        required: true
        schema:
          $ref: '#/definitions/request.MessageWithTime'
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: 用于删除留言的接口
      tags:
      - Message
  /api/uploadblog:
    post:
      consumes:
      - multipart/form-data
      description: 需要以form-data的形式上传一篇笔记以及其对应的图片，一次只能以一篇笔记为单位上传，上传后需要等待返回处理结果响应
      parameters:
      - description: Markdown文件
        in: formData
        name: markdown
        required: true
        type: file
      - collectionFormat: csv
        description: 图片文件（支持多个）
        in: formData
        items:
          type: file
        name: images
        type: array
      - collectionFormat: multi
        description: Tags标签数组
        in: formData
        items:
          type: string
        name: tags
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: 错误提示
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: 该接口用于接受博文进行上传
      tags:
      - Blog
  /blogitem:
    post:
      consumes:
      - application/json
      description: 依据博客标题获取单篇博客详情
      parameters:
      - description: 博客标题
        in: body
        name: criteria
        required: true
        schema:
          $ref: '#/definitions/request.BlogWithName'
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.BlogWithTag'
              type: object
      summary: 该接口用于获取单篇博客详情内容
      tags:
      - Blog
  /bloglist:
    post:
      consumes:
      - application/json
      description: |-
        可以按照请求中的参数，根据时间排序、标签筛选、标题关键词搜索的方式获取博客，如果参数为空表示获取所有的博客简略，关键词和标签必须一个为空
        请求中可以标明返回的博客数量范围，例如1-10表示按时间排序的第一篇到第十篇博客
      parameters:
      - description: 字段为空表示获取所有博客
        in: body
        name: criteria
        required: true
        schema:
          $ref: '#/definitions/request.BlogCriteria'
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.BlogWithTag'
                  type: array
              type: object
      summary: 该接口用于获取所有博文简略，每个博文的内容前100字
      tags:
      - Blog
  /login:
    post:
      consumes:
      - application/json
      description: 请求中携带管理员昵称和密码，返回JWT令牌
      parameters:
      - description: 登录数据
        in: body
        name: logindata
        required: true
        schema:
          $ref: '#/definitions/request.LoginData'
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.TokenData'
              type: object
      summary: 该接口用于登录
      tags:
      - Auth
  /message:
    get:
      consumes:
      - application/json
      description: 该接口用于获取所有的留言
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.MessageWithTime'
                  type: array
              type: object
      summary: 用于获取留言的接口
      tags:
      - Message
    post:
      consumes:
      - application/json
      description: 该接口用于用户上传字符串类型的留言
      parameters:
      - description: 留言详情
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/request.Message'
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: 用于上传留言的接口
      tags:
      - Message
  /tag:
    get:
      consumes:
      - application/json
      description: 该接口用于获取所有的标签
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.Tag'
                  type: array
              type: object
      summary: 用于获取标签的接口
      tags:
      - Tag
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
